### ansible-playbook playbooks/docker/docker-tasks.yml -i playbooks/AWS/hosts-aws_auto.ini --extra-vars "target=Ansible-Docker-test"
---
  - name: Install Docker-compose
    hosts: '{{ target }}'
    
    vars:
        # Place to get apt repository key
        apt_key_url: https://download.docker.com/linux/ubuntu/gpg
        # apt repository key signature
        apt_key_sig: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        # Name of the apt repository for Docker
        apt_repository: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_lsb.id|lower }} {{ ansible_lsb.codename|lower }} stable"

    tasks:
        - name: Add Docker repository key
          apt_key:
            id: "{{ apt_key_sig }}"
            keyserver: "{{ apt_key_url }}"
            state: present
          register: add_repository_key
          ignore_errors: true

        - name: Alternative | Add Docker repository key
          shell: "curl -sSL {{ apt_key_url }} | sudo apt-key add -"
          when: add_repository_key|failed

        - name: HTTPS APT transport for Docker repository
          apt:
            name: apt-transport-https
            state: present
          become: yes

        - name: Add Docker repository and update apt cache
          apt_repository:
            repo: "{{ apt_repository }}"
            mode: '644'
            update_cache: yes
            state: present
          become: yes

  
#      - name: Update and upgrade apt packages
#        become: true
#        apt:
#          upgrade: yes
#          update_cache: yes
#          cache_valid_time: 86400 #One day
#
#      - name : Install required packages
#        apt: name={{ item }} state=latest
#        with_items:
#            - fuse
#        become: yes
#
#      - name : Create Rclone configuration directory
#        file:
#          path: /root/.config/rclone
#          state: directory
#        become: yes
#            
#      - name: Copy Rclone configuration file
#        copy:
#          src: "{{ rclone_conf_path }}"
#          dest: "/root/.config/rclone/rclone.conf"
#          mode: 0644
#          owner: root
#          group: root
#        become: yes
#        
#      - name: Copy Rclone service file
#        copy:
#          src: "{{ rclone_service_path }}"
#          dest: "/etc/systemd/system/rclone-mount.service"
#          mode: 0755
#          owner: root
#          group: root
#        become: yes
#
#      - name : Create Rclone mount directory
#        file:
#          path: /mnt/GDrive/
#          state: directory
#        become: yes
#
#      - name: Enable and start Rclone service
#        systemd:
#          daemon_reload: yes
#          name: rclone-mount.service
#          enabled: yes
#          state: started
#        become: yes
#
##      - name: Pull Plex Media Center image
##        docker_image:
##          name: plexinc/pms-docker
##        become: yes
##          
##      - name: Build mobiplex docker service                
##        docker_service:
##            project_name: mobiplex
##            definition:
##              version: '2'
##              services:
##                plex:
##                  image: plexinc/pms-docker
##                  restart: unless-stopped
##                  environment:
##                    - TZ=Europe/Paris
##                    ### Get a PlexClaim here : https://plex.tv/claim
##                    #- PLEX_CLAIM=claim-tmsqtEuR1F8PqWwFdByu
##                  network_mode: host
##                  volumes:
##                  - ./Mobiplex:/config
##                  - /tmp>:/transcode
##                  - /mnt/GDrive/Hulk>:/data
##        register: output
##        become: yes  
##
##      - debug:
##        var: output
##        
##      - docker_service:
##          project_name: mobiplex
##          state: present
## #       become: yes      
#
#
#
