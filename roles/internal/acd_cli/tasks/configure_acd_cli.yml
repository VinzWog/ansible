#####
# Tasks to configure_acd_cli
#####

- name: Enable user_allow_other in fuse.conf
  lineinfile:
    dest: /etc/fuse.conf
    state: present
    regexp: "^#user_allow_other"
    line: "user_allow_other"
  become: yes

- name: Create ACD cache directory
  file:
    path: ~/.cache/acd_cli
    state: directory
    recurse: yes

- name: Install OAuth file
  copy:
   src: vars/oauth_data
   dest: ~/.cache/acd_cli/oauth_data
   force: no

- name: Recover acces token from oauth_data
  shell: grep access ~/.cache/acd_cli/oauth_data | cut -d'"' -f4
  register: grep_access

- set_fact: ACCESSS_TOKEN="{{ grep_access.stdout }}"

- name: Recover refresh token from oauth_data
  shell: grep refresh ~/.cache/acd_cli/oauth_data | cut -d'"' -f4
  register: grep_refresh

#- debug: var=grep.stdout

- set_fact: REFRESH_TOKEN="{{ grep_refresh.stdout }}"

#- debug: var=REFRESH_TOKEN

- name: Refresh token
  uri:
    url: https://tensile-runway-92512.appspot.com/
    method: POST
    body: "refresh_token={{ REFRESH_TOKEN }}"
    return_content: yes
  register: request_answer

#- debug: var=request_answer

- set_fact: NEW_TOKEN="{{ request_answer.content | from_json }}"

#- debug: var=new.access_token

- name: Fill oauth_data template with new token
  template:
    src: vars/template-oauth_data.j2
    dest: ~/.cache/acd_cli/oauth_data
    mode: 0644

- block:
  - name: Perform initial sync
    command: "{{ ACD_INSTALL_PATH }}/bin/acdcli sync"
    args:
     creates: ~/.cache/acd_cli/nodes.db     
  rescue:
  - name: Perform sync (again)
    command: "{{ ACD_INSTALL_PATH }}/bin/acdcli sync"
    args:
     creates: ~/.cache/acd_cli/nodes.db      

- name: Create ACD mountpoint
  file:
    path: "{{ ACD_MOUNTPOINT }}"
    state: directory
    recurse: yes

- name: Install SystemD unit file
  template:
    src: vars/acd.service
    dest: /etc/systemd/system/acd.service
  become: yes

- name: SystemD Daemon reload and start
  systemd:
    name: acd.service
    state: started
    enabled: yes
    daemon_reload: yes
  become: yes